=============================================
Format in backend.event.txt
=============================================
In backend.event.txt, Tables and Employees are stored by their id values (int)
Order (dishName:item+4_item-3_item-1)|(another dish)

=============================================
package backend.employee
=============================================
class EmployeeManager
+ add(Employee backend.employee): void
+ toString(): String
+ getEmployeeById(int id): Employee


class Employee
+ receiveIngredient(String receivedIngredientName, int quantity): void
+ getID(): int
+ setInventory(Inventory backend.inventory): void


class Cook
+ orderReceived(): void
+ dishReady(int dishNumber): void
+ toString(): String


class Server
+ takeSeat(Table backend.table): void
+ enterMenu(Table backend.table, Order order): void
+ deliverDishCompleted(Dish dish): void
+ deliverDishFailed(Dish dish): void
+ printBill(Table backend.table): void
+ checkIfPaid(Table backend.table): boolean
+ toString(): String

class Manager
+ checkInventory(): void
+ toString(): String


class OrderQueue
+ addOrderInQueue(Order order): void
+ queueIsEmpty(): boolean
+ confirmOrdersInQueue(): void
+ dishCompleted(): void
+ dishDelivered(): void

============================================
TableManager
============================================
// + takeSeat(Table backend.table, Server server): void / This method is transferred to Server class.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
phase 2:

client -> server
1. requestMenu(): request a HashMap of dishes in Menu
2. IDidenify(int i): ask for the employee type of i
3. addTable(int i): this server take charge of table i
4. clearTable(int i): the table is clear
5. order(Dish): order dish
6.updateMenu: every time a dish is order, keep some ingredient on hold ,also add a dish to the order
7.sendOrder(all dish): send the Order to Cook
8.requestbill(int i): table i request a bill